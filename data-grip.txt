# CREATE TABLE IF NOT EXISTS `users`
# (
#     `id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
#     `first_name` VARCHAR(50) NOT NULL,
#     `last_name` VARCHAR(50) NULL,
#     `email` VARCHAR(255),
#     `password` VARCHAR(255) NOT NULL,
#     `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
#     `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
#     UNIQUE(email)
# );
#
# CREATE TABLE IF NOT EXISTS `roles`
# (
#     `id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
#     `name` VARCHAR(50) NOT NULL,
#     UNIQUE (name)
# );
#
# CREATE TABLE IF NOT EXISTS `user_roles`
# (
#     `id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
#     `user_id` INT UNSIGNED NOT NULL,
#     `role_id` INT UNSIGNED NOT NULL,
#     `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
#     `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
#     FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
#     FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE
# );
#
# CREATE TABLE IF NOT EXISTS `profiles`
# (
#     `id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
#     `bio` TEXT NULL,
#     `user_id` INT UNSIGNED NULL,
#     FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
# );


#DESCRIBE users;

# INSERT INTO users
# (first_name, last_name, email, password) VALUES
# ("Gustavo", "de Moraes", "gustavoo.1@gmail.com", "password"),
# ("Gustavo", "de Moraes", "gustavoo.2@gmail.com", "password"),
# ("Gustavo", "de Moraes", "gustavoo.3@gmail.com", "password");
#

# SELECT u.first_name u_fistname, u.last_name u_lastname, u.email u_email
# FROM users as u;

# SELECT *
# FROM users
# WHERE created_at >= '2025-02-11 23:26:30'
# AND email =  'gustavoo.sec1@gmail.com';

# SELECT *
# FROM users
# WHERE created_at
# BETWEEN '2025-02-11 21:17:00'
# AND '2025-02-11 21:23:00'
# AND id
# BETWEEN 18
# AND 20;

# SELECT *
# FROM users
# ORDER BY first_name
# LIMIT 2 OFFSET 1;

# INSERT INTO profiles
#     (bio, user_id)
# SELECT CONCAT('bio de ', first_name), id
# FROM users;

#DELETE FROM users WHERE id = 1;

# UPDATE users
# SET first_name = 'Silva',
#     last_name = 'Maria'
# WHERE id = 5;
#
# SELECT
#     *
# FROM users
# WHERE id = 5;

# SELECT u.id as uid, p.id as pid,
# u.first_name, u.last_name, p.bio
# FROM users as u, profiles as p
# WHERE u.id = p.user_id;

#INNER JOIN IMPLICITO
# SELECT u.id as uid, p.id as pid,
# u.first_name, u.last_name, p.bio
# FROM users as u, profiles as p
# WHERE u.id = p.user_id
# LIMIT 5;

#INNER JOIN EXPLICITO
# SELECT u.id as uid, p.id as pid,
# u.first_name, u.last_name, p.bio
# FROM users as u
# INNER JOIN profiles p
# ON u.id = p.user_id
# LIMIT 5;

#LEFT JOIN EXPLICITO
# SELECT u.id as uid, p.id as pid,
# u.first_name, u.last_name, p.bio
# FROM users as u
# LEFT JOIN profiles p
# ON u.id = p.user_id
# LIMIT 5;

# RIGHT JOIN EXPLICITO
# SELECT u.id as uid, p.id as pid,
# u.first_name, u.last_name, p.bio
# FROM users as u
# RIGHT JOIN profiles p
# ON u.id = p.user_id
# LIMIT 5;

# ALTER TABLE users
#     add salary DECIMAL(15, 2) NULL;

# UPDATE users
# SET salary = round(rand() * 10000, 2);

# SELECT salary
# FROM users
# WHERE salary
# BETWEEN 1000 AND 2000
# ORDER BY salary DESC

# INSERT INTO roles (name)
# VALUES
#     ('POST'), ('PUT'), ('DELETE'), ('GET')

# INSERT INTO user_roles (user_id, role_id) VALUES (2,4)

#SELECT ROLES RANDOM
SELECT id,
       (SELECT id FROM roles ORDER BY rand() LIMIT 1)
FROM users;

#INSERT TO USER_ROLES WITH ROLE_ID GENERATE RANDOM ID`s
INSERT INTO user_roles(user_id, role_id)
SELECT id,
       (SELECT id FROM roles ORDER BY rand() LIMIT 1)
FROM users;

#SAME QUERY ABOVE, BUT INSERT TO USER_ROLES WITH ROLE_ID GENERATE RANDOM ID`s IGNORING ERRORS
INSERT IGNORE INTO user_roles(user_id, role_id)
SELECT id,
       (SELECT id FROM roles ORDER BY rand() LIMIT 1)
FROM users;
